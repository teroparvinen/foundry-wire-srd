{
  "_id": "tYtt3XTjdL3ZnC4i",
  "name": "Lay on Hands",
  "type": "feat",
  "img": "icons/magic/light/orbs-hand-gray.webp",
  "effects": [],
  "folder": null,
  "sort": 0,
  "flags": {
    "dnd5e": {
      "sourceId": "Compendium.dnd5e.classfeatures.OdrvL3afwLOPeuYZ",
      "advancementOrigin": "is86kr9rdya0aupp.z2d0fxi8e24gradq"
    },
    "wire": {
      "checkedAbility": "",
      "override": {
        "target": {
          "value": "1"
        }
      },
      "compendiumSource": "wire-srd.classfeatures",
      "compendiumVersion": "0.11.0",
      "saveImmunity": false,
      "script": "this.skipConfigurationDialog();\nthis.requestCustomConfiguration(async (item, requirements) => {\n    const available = item.system.uses.value;\n    const { healing, conditions, uses } = await new Promise(async (resolve, reject) => {\n        await new Dialog({\n            title: \"Lay on Hands\",\n            content: `\n                <form id=\"lay-on-hands-use-form\">\n                    <div class=\"form-group\">\n                        <label>Points to use <span class=\"units\">(${available} available)</span></label>\n                        <div class=\"form-fields\">\n                        <input type=\"range\" name=\"lohrange\" id=\"lohpoints\" value=\"1\" min=\"1\" max=\"${available}\" step=\"1\" oninput=\"this.form.lohinput.value=this.value\" />\n                        <input class=\"range-value\" name=\"lohinput\" value=\"1\" oninput=\"this.form.lohrange.value=this.value\" style=\"width: 50px; background: transparent; font-family: var(--font-primary);\" />\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"checkbox\"><input type=\"checkbox\" id=\"consumelohuses\" checked=\"\">Consume Uses</label>\n                    </div>\n                </form>\n                `,\n            buttons: {\n                heal: {\n                    label: \"Heal\",\n                    callback: (html) => {\n                        const healing = Math.clamped(Math.floor(Number(html.find('#lohpoints')[0].value)), 0, available);\n                        const conditions = 0;\n                        const uses = html.find('#consumelohuses')[0].checked ? healing : 0;\n                        resolve({ healing, conditions, uses });\n                    }\n                },\n                cureDiseasePoison: {\n                    label: \"Disease/Poison\",\n                    callback: (html) => {\n                        const healing = 0;\n                        const conditions = Math.clamped(Math.floor(Number(html.find('#lohpoints')[0].value) / 5), 0, Math.floor(available / 5));\n                        const uses = html.find('#consumelohuses')[0].checked ? conditions * 5 : 0;\n                        resolve({ healing, conditions, uses });\n                    }\n                }\n            },\n            default: \"heal\",\n        }).render(true);\n    });\n\n    requirements.consumedUsageCount = uses;\n    requirements.skipDefaultDialog = true;\n\n    return {\n        healing,\n        conditions\n    };\n});\n\nthis.registerFlowStep(\"applyLayOnHands\", true, async (activation) => {\n    if (activation.config.healing) {\n        const damageParts = await game.wire.DamageParts.singleValue(activation.config.healing, \"healing\");\n        await activation.applyDamageRollParts(damageParts);\n    } else if (activation.config.conditions) {\n        const html = `Healing <b>${activation.config.conditions}</b> diseases or poisons`;\n        await activation.assignCustomHtml(html);\n    }\n});\n\nreturn this.applyDefaultTargetsAsEffective(\n    this.performCustomStep(\"applyLayOnHands\",\n        this.applyDamage()\n    )\n);"
    }
  },
  "system": {
    "description": {
      "value": "<p>Your blessed touch can heal wounds. You have a pool of healing power that replenishes when you take a long rest. With that pool, you can restore a total number of hit points equal to your paladin level Ã— 5.</p><p>As an action, you can touch a creature and draw power from the pool to restore a number of hit points to that creature, up to the maximum amount remaining in your pool.</p><p>Alternatively, you can expend 5 hit points from your pool of healing to cure the target of one disease or neutralize one poison affecting it. You can cure multiple diseases and neutralize multiple poisons with a single use of Lay on Hands, expending hit points separately for each one.</p><p>This feature has no effect on undead and constructs.</p>",
      "chat": "",
      "unidentified": ""
    },
    "source": "PHB pg. 84",
    "activation": {
      "type": "action",
      "cost": 1,
      "condition": "Target cannot be Undead or a Construct."
    },
    "duration": {
      "value": null,
      "units": ""
    },
    "cover": null,
    "crewed": false,
    "target": {
      "value": 1,
      "width": null,
      "units": "",
      "type": "creature"
    },
    "range": {
      "value": null,
      "long": null,
      "units": "touch"
    },
    "uses": {
      "value": 10,
      "max": "5 * @classes.paladin.levels",
      "per": "lr",
      "recovery": ""
    },
    "consume": {
      "type": "",
      "target": "",
      "amount": 6
    },
    "ability": "",
    "actionType": "heal",
    "attackBonus": 0,
    "chatFlavor": "",
    "critical": {
      "threshold": null,
      "damage": ""
    },
    "damage": {
      "parts": [],
      "versatile": ""
    },
    "formula": "",
    "save": {
      "ability": "",
      "dc": null,
      "scaling": "spell"
    },
    "type": {
      "value": "class",
      "subtype": ""
    },
    "requirements": "Paladin 1",
    "recharge": {
      "value": null,
      "charged": false
    }
  },
  "ownership": {
    "default": 0,
    "m7gKrZnSC3XR8ToV": 3
  },
  "_stats": {
    "systemId": "dnd5e",
    "systemVersion": "2.2.2",
    "coreVersion": "11.306",
    "createdTime": null,
    "modifiedTime": 1694935073107,
    "lastModifiedBy": "dBglmdrMUDMEh6ZW"
  },
  "_key": "!items!tYtt3XTjdL3ZnC4i"
}
